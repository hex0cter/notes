{"version":3,"sources":["components/NotePreview/index.module.css","components/AddNewNote/index.module.css","actions.js","components/TextArea/map-dispatch-to-props.js","components/TextArea/map-state-to-props.js","components/TextArea/index.js","components/Siderbar/map-dispatch-to-props.js","components/Siderbar/map-state-to-props.js","components/NotesList/map-dispatch-to-props.js","components/NotesList/map-state-to-props.js","components/NotePreview/map-dispatch-to-props.js","components/NotePreview/map-state-to-props.js","components/NotePreview/index.js","components/NotesList/index.js","components/AddNewNote/map-dispatch-to-props.js","components/AddNewNote/map-state-to-props.js","components/AddNewNote/index.js","components/Siderbar/index.js","components/Root/index.js","reducer.js","store.js","App.js","serviceWorker.js","index.js","components/Siderbar/index.module.css"],"names":["module","exports","NotePreview","NotePreviewActive","AddNewNote","ACTION_UPDATE_CONTENT","ACTION_UPDATE_SIDEBAR_OPEN","ACTION_CLOSE_SIDEBAR","ACTION_ADD_NEW_NOTE","ACTION_UPDATE_ACTIVE_INDEX","updateActiveIndex","payload","type","mapDispatchToProps","dispatch","onUpdateContent","content","onCloseSidebar","mapStateToProps","state","activeNote","TeaxArea","onChange","event","target","value","_this","props","onClick","react_default","a","createElement","this","autoFocus","style","width","height","Component","connect","onUpdateSidebarOpen","isSidebarOpen","onUpdateActiveIndex","console","log","activeIndex","notes","previewStyle","currentIndex","styles","className","currentNote","React","NotesList","map","note","index","components_NotePreview","key","onAddNewNote","SiderBar","SiderbarOpen","Siderbar","Burger","HamburgerOpen","Hamburger","concat","List","components_AddNewNote","components_NotesList","Root","components_TextArea","components_Siderbar","defaultInitialNote","lastUpdate","Date","now","localNotes","JSON","parse","localStorage","getItem","stringify","initialState","reducer","arguments","length","undefined","action","actions","newActiveContent","Object","toConsumableArray","newState","objectSpread","setItem","updateContent","newNote","store","createStore","App","es","components_Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee400c45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotePreview\":\"NotePreview_NotePreview__1gjX_\",\"NotePreviewActive\":\"NotePreview_NotePreviewActive__322s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewNote\":\"AddNewNote_AddNewNote__1idek\"};","export const ACTION_UPDATE_CONTENT = 'ACTION_UPDATE_CONTENT'\nexport const ACTION_UPDATE_SIDEBAR_OPEN = 'ACTION_UPDATE_SIDEBAR_OPEN'\nexport const ACTION_CLOSE_SIDEBAR = 'ACTION_CLOSE_SIDEBAR'\nexport const ACTION_ADD_NEW_NOTE = 'ACTION_ADD_NEW_NOTE'\nexport const ACTION_UPDATE_ACTIVE_INDEX = 'ACTION_UPDATE_ACTIVE_INDEX'\n\nexport function updateContent(payload) {\n  return { type: ACTION_UPDATE_CONTENT, payload }\n}\n\nexport function updateSidebarOpen(payload) {\n  return { type: ACTION_UPDATE_SIDEBAR_OPEN, payload }\n}\n\nexport function closeSidebar() {\n  return { type: ACTION_CLOSE_SIDEBAR }\n}\n\nexport function addNewNote() {\n  return { type: ACTION_ADD_NEW_NOTE }\n}\n\nexport function updateActiveIndex(payload) {\n  return { type: ACTION_UPDATE_ACTIVE_INDEX, payload}\n}\n","import { updateContent, closeSidebar } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateContent: (content) => dispatch(updateContent(content)),\n  onCloseSidebar: () => dispatch(closeSidebar())\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  return {\n    activeNote: state.activeNote\n  }\n}\n\nexport default mapStateToProps\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport './index.css'\n\nclass TeaxArea extends Component {\n  onChange = (event) => {\n    const content = event.target.value\n    this.props.onUpdateContent(content)\n  }\n\n  onClick = () => {\n    this.props.onCloseSidebar()\n  }\n\n  render() {\n    return (\n      <textarea\n        value={this.props.activeNote.content}\n        autoFocus\n        style={{width: this.props.width, height: this.props.height}}\n        onChange={this.onChange}\n        onClick={this.onClick}\n      />\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeaxArea)\n","import { updateSidebarOpen } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateSidebarOpen: content => dispatch(updateSidebarOpen(content))\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  return {\n    isSidebarOpen: state.isSidebarOpen\n  }\n}\n\nexport default mapStateToProps\n","import { updateActiveIndex } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateActiveIndex: (payload) => dispatch(updateActiveIndex(payload))\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    activeIndex: state.activeIndex,\n    notes: state.notes\n  }\n}\n\nexport default mapStateToProps\n","import { updateActiveIndex } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateActiveIndex: (payload) => dispatch(updateActiveIndex(payload))\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    activeIndex: state.activeIndex\n  }\n}\n\nexport default mapStateToProps\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport styles from './index.module.css'\n\nclass NotePreview extends React.Component {\n  render() {\n    const isNoteSelected = this.props.currentIndex === this.props.activeIndex\n    const previewStyle = isNoteSelected ? styles.NotePreviewActive : styles.NotePreview\n    return (\n      <div\n        className={previewStyle}\n        onClick={() => { this.props.onUpdateActiveIndex(this.props.currentIndex) }} >\n        { this.props.currentNote.content }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotePreview)\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport NotePreview from '../NotePreview'\n\nclass NotesList extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.notes.map((note, index) => <NotePreview key={index} currentIndex={index} currentNote={note} />) }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesList)\n","import { addNewNote } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddNewNote: () => dispatch(addNewNote())\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  return {\n  }\n}\n\nexport default mapStateToProps\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport styles from './index.module.css'\n\nclass AddNewNote extends React.Component {\n  render() {\n    return (\n      <div\n        className={styles.AddNewNote}\n        onClick={this.props.onAddNewNote}>\n        + Add new ...\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewNote)\n","import React, { Component } from 'react'\nimport styles from './index.module.css'\nimport 'hamburgers/dist/hamburgers.css'\nimport './index.css'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport NotesList from '../NotesList'\nimport AddNewNote from '../AddNewNote'\n\nclass SiderBar extends Component {\n  render() {\n    return (\n      <div className={this.props.isSidebarOpen ? styles.SiderbarOpen : styles.Siderbar}>\n        <div className={styles.Burger}>\n          <div className={this.props.isSidebarOpen ? styles.HamburgerOpen : styles.Hamburger} onClick={() => {this.props.onUpdateSidebarOpen()}} >\n            <div className=\"hamburger-box\">\n              <div className={`hamburger-inner ${this.props.isSidebarOpen ? 'white-hamburger' :  ''}`}></div>\n            </div>\n          </div>\n        </div>\n        {this.props.isSidebarOpen ?\n          (<div className={styles.List}>\n          <AddNewNote />\n          <NotesList />\n        </div>) : null }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiderBar)\n","import React, { Component } from 'react'\nimport TextArea from '../TextArea'\nimport SiderBar from '../Siderbar'\n\nclass Root extends Component {\n  render() {\n    return (\n      <div>\n        <TextArea />\n        <SiderBar />\n      </div>\n    );\n  }\n}\n\nexport default Root\n","import * as actions from './actions'\n\n// Default structure: {\n//   activeIndex: 0,\n//   notes: [\n//     'foo',\n//     'bar'\n//   ]\n// }\nconst defaultInitialNote = {\n  lastUpdate: Date.now(),\n  content: ''\n}\nconst localNotes = JSON.parse(localStorage.getItem('local-notes') ||\n                              JSON.stringify({notes: [defaultInitialNote]}))\nconst activeIndex = localNotes.activeIndex || 0\nconst initialState = {\n  activeIndex,\n  notes: localNotes.notes,\n  activeNote: localNotes.notes[activeIndex] || defaultInitialNote,\n  isSidebarOpen: false\n}\n\nfunction updateContent(state, newActiveContent) {\n  const activeNote = {\n    content: newActiveContent,\n    lastUpdate: Date.now()\n  }\n  const notes = [...state.notes]\n  notes[state.activeIndex] = activeNote\n\n  const newState = {\n    ...state,\n    activeNote,\n    notes\n   }\n  localStorage.setItem('local-notes', JSON.stringify(newState))\n\n  return newState\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.ACTION_UPDATE_CONTENT: {\n      return updateContent(state, action.payload)\n    }\n    case actions.ACTION_UPDATE_SIDEBAR_OPEN: {\n      return {\n        ...state,\n        isSidebarOpen: !state.isSidebarOpen\n      }\n    }\n    case actions.ACTION_CLOSE_SIDEBAR: {\n      return {\n        ...state,\n        isSidebarOpen: false\n      }\n    }\n    case actions.ACTION_ADD_NEW_NOTE: {\n      const newNote = {\n        content: '',\n        lastUpdate: Date.now()\n      }\n      const notes = [newNote, ...state.notes]\n      const activeIndex = 0\n      return {\n        ...state,\n        activeIndex,\n        activeNote: newNote,\n        notes\n      }\n    }\n    case actions.ACTION_UPDATE_ACTIVE_INDEX: {\n      const activeIndex = action.payload\n      const activeNote = [...state.notes][activeIndex]\n      const newState = {\n        ...state,\n        activeIndex,\n        activeNote\n      }\n      localStorage.setItem('local-notes', JSON.stringify(newState))\n      return newState\n    }\n    default:\n      console.log('Action type', action.type)\n      return state\n    }\n  }\n\n  export default reducer\n","\nimport { createStore } from \"redux\"\nimport reducer from \"./reducer\"\nconst store = createStore(reducer)\nexport default store\n","import React from 'react'\nimport './App.css'\nimport Root from './components/Root'\nimport store from \"./store\"\nimport { Provider } from \"react-redux\"\n\nclass App extends React.Component {\n  render() {\n    return  (\n      <Provider store={store}>\n        <Root />\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Siderbar_Burger__S8cVP\",\"Siderbar\":\"Siderbar_Siderbar__1QRRz\",\"SiderbarOpen\":\"Siderbar_SiderbarOpen__34Bd2\",\"List\":\"Siderbar_List__2Wq4J\",\"Hamburger\":\"Siderbar_Hamburger__1OuTw\"};"],"sourceRoot":""}