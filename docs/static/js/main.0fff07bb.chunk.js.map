{"version":3,"sources":["actions.js","components/TextArea/map-dispatch-to-props.js","components/TextArea/map-state-to-props.js","components/TextArea/index.js","components/Siderbar/map-dispatch-to-props.js","components/Siderbar/map-state-to-props.js","components/NotesList/map-dispatch-to-props.js","components/NotesList/map-state-to-props.js","components/NotePreview/map-dispatch-to-props.js","components/NotePreview/map-state-to-props.js","components/NotePreview/index.js","components/NotesList/index.js","components/AddNewNote/map-dispatch-to-props.js","components/AddNewNote/index.js","components/DeleteAllNotes/map-dispatch-to-props.js","components/DeleteAllNotes/index.js","components/Siderbar/index.js","components/Root/index.js","reducer.js","store.js","App.js","serviceWorker.js","index.js","components/Siderbar/index.module.css","components/NotePreview/index.module.css","components/AddNewNote/index.module.css","components/DeleteAllNotes/index.module.css"],"names":["ACTION_UPDATE_CONTENT","ACTION_UPDATE_SIDEBAR_OPEN","ACTION_CLOSE_SIDEBAR","ACTION_ADD_NEW_NOTE","ACTION_DELETE_NOTE","ACTION_DELETE_ALL_NOTES","ACTION_UPDATE_ACTIVE_INDEX","updateActiveIndex","payload","type","mapDispatchToProps","dispatch","onUpdateContent","content","onCloseSidebar","mapStateToProps","state","notes","activeIndex","TeaxArea","onChange","event","target","value","_this","props","onClick","react_default","a","createElement","this","autoFocus","id","style","width","height","placeholder","Component","connect","onUpdateSidebarOpen","isSidebarOpen","onUpdateActiveIndex","console","log","onDeleteNote","deleteNote","NotePreview","e","currentIndex","window","document","getElementById","focus","preventDefault","previewStyle","styles","NotePreviewActive","className","PreviewText","currentNote","DeleteButton","icon","React","NotesList","map","note","index","components_NotePreview","key","onAddNewNote","AddNewNote","es_button","ghost","onDeleteAllNotes","confirm","Modal","DeleteAllNotes","deleteAll","deleteAllFunc","title","onOk","onCancel","Siderbar","burgerStyle","fontSize","SiderbarOpen","Burger","List","components_AddNewNote","components_NotesList","components_DeleteAllNotes","Footer","href","Root","components_TextArea","components_Siderbar","defaultInitialNote","lastUpdate","Date","now","localNotes","JSON","parse","localStorage","getItem","stringify","initialState","reducer","arguments","length","undefined","action","actions","newActiveContent","Object","toConsumableArray","newState","objectSpread","setItem","updateContent","concat","indexToDelete","updatedState","splice","newActiveIndex","store","createStore","App","es","components_Root","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","openSiderBar","Hamburger"],"mappings":"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","file":"static/js/main.0fff07bb.chunk.js","sourcesContent":["export const ACTION_UPDATE_CONTENT = 'ACTION_UPDATE_CONTENT'\nexport const ACTION_UPDATE_SIDEBAR_OPEN = 'ACTION_UPDATE_SIDEBAR_OPEN'\nexport const ACTION_CLOSE_SIDEBAR = 'ACTION_CLOSE_SIDEBAR'\nexport const ACTION_ADD_NEW_NOTE = 'ACTION_ADD_NEW_NOTE'\nexport const ACTION_DELETE_NOTE = 'ACTION_DELETE_NOTE'\nexport const ACTION_DELETE_ALL_NOTES = 'ACTION_DELETE_ALL_NOTES'\nexport const ACTION_UPDATE_ACTIVE_INDEX = 'ACTION_UPDATE_ACTIVE_INDEX'\n\nexport function updateContent(payload) {\n  return { type: ACTION_UPDATE_CONTENT, payload }\n}\n\nexport function updateSidebarOpen(payload) {\n  return { type: ACTION_UPDATE_SIDEBAR_OPEN, payload }\n}\n\nexport function closeSidebar() {\n  return { type: ACTION_CLOSE_SIDEBAR }\n}\n\nexport function addNewNote() {\n  return { type: ACTION_ADD_NEW_NOTE }\n}\n\nexport function deleteNote(payload) {\n  return { type: ACTION_DELETE_NOTE, payload }\n}\n\nexport function deleteAllNotes() {\n  return { type: ACTION_DELETE_ALL_NOTES }\n}\n\nexport function updateActiveIndex(payload) {\n  return { type: ACTION_UPDATE_ACTIVE_INDEX, payload}\n}\n","import { updateContent, closeSidebar } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateContent: (content) => dispatch(updateContent(content)),\n  onCloseSidebar: () => dispatch(closeSidebar())\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  return {\n    content: state.notes[state.activeIndex].content\n  }\n}\n\nexport default mapStateToProps\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport './index.css'\n\nclass TeaxArea extends Component {\n  onChange = (event) => {\n    const content = event.target.value\n    this.props.onUpdateContent(content)\n  }\n\n  onClick = () => {\n    this.props.onCloseSidebar()\n  }\n\n  render() {\n    return (\n      <textarea\n        value={this.props.content}\n        autoFocus\n        id='textarea'\n        style={{width: this.props.width, height: this.props.height}}\n        onChange={this.onChange}\n        onClick={this.onClick}\n        placeholder={'Take your note here... \\n\\nYour notes are saved automatically in the browser\\'s local storage. It persists upon reload but never leave your device.'}\n      />\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeaxArea)\n","import { updateSidebarOpen } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateSidebarOpen: content => dispatch(updateSidebarOpen(content))\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  return {\n    isSidebarOpen: state.isSidebarOpen\n  }\n}\n\nexport default mapStateToProps\n","import { updateActiveIndex } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateActiveIndex: (payload) => dispatch(updateActiveIndex(payload))\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    activeIndex: state.activeIndex,\n    notes: state.notes\n  }\n}\n\nexport default mapStateToProps\n","import { updateActiveIndex, deleteNote } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateActiveIndex: (payload) => dispatch(updateActiveIndex(payload)),\n  onDeleteNote: (payload) => dispatch(deleteNote(payload))\n})\n\nexport default mapDispatchToProps\n","const mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    activeIndex: state.activeIndex\n  }\n}\n\nexport default mapStateToProps\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport styles from './index.module.css'\nimport { Icon } from 'antd'\n\nclass NotePreview extends React.Component {\n  updateActiveIndex = (e) => {\n    console.log('onUpdateActiveIndex')\n    this.props.onUpdateActiveIndex(this.props.currentIndex)\n    window.document.getElementById(\"textarea\").focus();\n    e.preventDefault()\n  }\n\n  deleteNote = (e) => {\n    this.props.onDeleteNote(this.props.currentIndex)\n    e.preventDefault()\n  }\n\n  render() {\n    const isNoteSelected = this.props.currentIndex === this.props.activeIndex\n    const previewStyle = isNoteSelected ? styles.NotePreviewActive : styles.NotePreview\n    return (\n      <div className={previewStyle}>\n        <div className={styles.PreviewText} onClick={this.updateActiveIndex} >\n          { this.props.currentNote.content }\n        </div>\n        <div className={styles.DeleteButton} onClick={this.deleteNote}>\n          <Icon type=\"delete\"/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotePreview)\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport NotePreview from '../NotePreview'\n\nclass NotesList extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.notes.map((note, index) => <NotePreview key={index} currentIndex={index} currentNote={note} />) }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesList)\n","import { addNewNote } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddNewNote: () => dispatch(addNewNote())\n})\n\nexport default mapDispatchToProps\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport styles from './index.module.css'\nimport { Button, Icon } from 'antd'\nimport 'antd/dist/antd.css'\n\nclass AddNewNote extends React.Component {\n  render() {\n    return (\n      <div\n        className={styles.AddNewNote}\n        onClick={this.props.onAddNewNote}>\n        <Button ghost><Icon type=\"plus\" />Add new</Button>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(AddNewNote)\n","import { deleteAllNotes } from '../../actions'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteAllNotes: () => dispatch(deleteAllNotes())\n})\n\nexport default mapDispatchToProps\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport styles from './index.module.css'\nimport { Button, Icon, Modal } from 'antd'\nimport 'antd/dist/antd.css'\n\nconst { confirm } = Modal\nclass DeleteAllNotes extends React.Component {\n  deleteAll = () => {\n    const deleteAllFunc = this.props.onDeleteAllNotes\n    confirm({\n      title: 'Are you sure to delete all the notes?',\n      onOk() {\n        deleteAllFunc()\n      },\n      onCancel() {},\n    })\n  }\n\n  render() {\n    return (\n      <div\n        className={styles.DeleteAllNotes}\n        onClick={this.deleteAll}>\n        <Button ghost type=\"danger\"><Icon type=\"delete\" />Delete all</Button>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(DeleteAllNotes)\n","import React, { Component } from 'react'\nimport styles from './index.module.css'\nimport { connect } from \"react-redux\"\nimport mapDispatchToProps from './map-dispatch-to-props'\nimport mapStateToProps from './map-state-to-props'\nimport NotesList from '../NotesList'\nimport AddNewNote from '../AddNewNote'\nimport DeleteAllNotes from '../DeleteAllNotes'\nimport { Icon } from 'antd'\nimport 'antd/dist/antd.css'\n\nclass Siderbar extends Component {\n  render() {\n    const burgerStyle = {fontSize: 'x-large'}\n    if (this.props.isSidebarOpen) {\n      burgerStyle['color'] = 'white'\n    } else {\n      burgerStyle['color'] = 'grey'\n    }\n    return (\n      <div className={this.props.isSidebarOpen ? styles.SiderbarOpen : styles.Siderbar}>\n        <div className={styles.Burger}>\n          <Icon type=\"menu\" style={burgerStyle} onClick={() => {this.props.onUpdateSidebarOpen()}} />\n        </div>\n        {this.props.isSidebarOpen ?\n          <div className={styles.List}>\n          <AddNewNote />\n          <NotesList />\n          <DeleteAllNotes />\n          <div className={styles.Footer} ><a href='https://danielhan.dev'>Daniel Han &copy;</a></div>\n        </div> : null }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Siderbar)\n","import React, { Component } from 'react'\nimport TextArea from '../TextArea'\nimport Siderbar from '../Siderbar'\n\nclass Root extends Component {\n  render() {\n    return (\n      <div>\n        <TextArea />\n        <Siderbar />\n      </div>\n    );\n  }\n}\n\nexport default Root\n","import * as actions from './actions'\n\n// Default structure: {\n//   activeIndex: 0,\n//   notes: [\n//     'foo',\n//     'bar'\n//   ]\n// }\nconst defaultInitialNote = {\n  lastUpdate: Date.now(),\n  content: ''\n}\nconst localNotes = JSON.parse(localStorage.getItem('local-notes') ||\n                              JSON.stringify({notes: [defaultInitialNote]}))\nconst activeIndex = localNotes.activeIndex || 0\nconst initialState = {\n  activeIndex,\n  notes: localNotes.notes,\n  isSidebarOpen: false\n}\n\nfunction updateContent(state, newActiveContent) {\n  const notes = [...state.notes]\n  notes[state.activeIndex] = {\n    content: newActiveContent,\n    lastUpdate: Date.now()\n  }\n\n  const newState = {\n    ...state,\n    notes\n   }\n  localStorage.setItem('local-notes', JSON.stringify(newState))\n\n  return newState\n}\n\nfunction deleteNote(state, indexToDelete) {\n  const newState = {...state}\n  const activeIndex = newState.activeIndex\n  const notes = [...newState.notes]\n  let updatedState\n\n  if(indexToDelete > activeIndex) {\n    notes.splice(indexToDelete, 1)\n    updatedState = {\n      ...newState,\n      notes\n    }\n  } else if (indexToDelete < activeIndex) {\n    notes.splice(indexToDelete, 1)\n    const newActiveIndex = activeIndex - 1\n    updatedState = {\n      ...newState,\n      notes,\n      activeIndex: newActiveIndex,\n    }\n  } else if (indexToDelete === activeIndex) {\n    if (activeIndex === 0) {\n      if (newState.notes.length > 1) {\n        notes.splice(indexToDelete, 1)\n        updatedState = {\n          ...newState,\n          notes\n        }\n      } else {\n        const notes = [{\n          content: '',\n          lastUpdate: Date.now()\n        }]\n        updatedState = {\n          ...newState,\n          notes,\n          activeIndex: 0\n        }\n      }\n    } else {\n      notes.splice(indexToDelete, 1)\n      const newActiveIndex = activeIndex - 1\n\n      updatedState = {\n        ...newState,\n        notes,\n        activeIndex: newActiveIndex,\n      }\n    }\n  }\n\n  localStorage.setItem('local-notes', JSON.stringify(updatedState))\n  return updatedState\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.ACTION_UPDATE_CONTENT: {\n      return updateContent(state, action.payload)\n    }\n    case actions.ACTION_UPDATE_SIDEBAR_OPEN: {\n      return {\n        ...state,\n        isSidebarOpen: !state.isSidebarOpen\n      }\n    }\n    case actions.ACTION_CLOSE_SIDEBAR: {\n      return {\n        ...state,\n        isSidebarOpen: false\n      }\n    }\n    case actions.ACTION_ADD_NEW_NOTE: {\n      const newNote = {\n        content: '',\n        lastUpdate: Date.now()\n      }\n      const notes = [newNote, ...state.notes]\n      const activeIndex = 0\n      return {\n        ...state,\n        activeIndex,\n        notes\n      }\n    }\n    case actions.ACTION_DELETE_NOTE: {\n      return deleteNote(state, action.payload)\n    }\n    case actions.ACTION_DELETE_ALL_NOTES: {\n      const newNote = {\n        content: '',\n        lastUpdate: Date.now()\n      }\n      const notes = [newNote]\n      const activeIndex = 0\n\n      return {\n        ...state,\n        activeIndex,\n        notes\n      }\n    }\n    case actions.ACTION_UPDATE_ACTIVE_INDEX: {\n      console.log('switching index...')\n      const activeIndex = action.payload\n      const newState = {\n        ...state,\n        activeIndex,\n      }\n      localStorage.setItem('local-notes', JSON.stringify(newState))\n      return newState\n    }\n    default:\n      console.log('Action type', action.type)\n      return state\n    }\n  }\n\n  export default reducer\n","\nimport { createStore } from \"redux\"\nimport reducer from \"./reducer\"\nconst store = createStore(reducer)\nexport default store\n","import React from 'react'\nimport './App.css'\nimport Root from './components/Root'\nimport store from \"./store\"\nimport { Provider } from \"react-redux\"\n\nclass App extends React.Component {\n  render() {\n    return  (\n      <Provider store={store}>\n        <Root />\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Siderbar_Burger__S8cVP\",\"Siderbar\":\"Siderbar_Siderbar__1QRRz\",\"SiderbarOpen\":\"Siderbar_SiderbarOpen__34Bd2\",\"openSiderBar\":\"Siderbar_openSiderBar__1S9aV\",\"List\":\"Siderbar_List__2Wq4J\",\"Hamburger\":\"Siderbar_Hamburger__1OuTw\",\"Footer\":\"Siderbar_Footer__3GUm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotePreview\":\"NotePreview_NotePreview__1gjX_\",\"NotePreviewActive\":\"NotePreview_NotePreviewActive__322s9\",\"PreviewText\":\"NotePreview_PreviewText__1r9P1\",\"DeleteButton\":\"NotePreview_DeleteButton__2CtWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewNote\":\"AddNewNote_AddNewNote__1idek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteAllNotes\":\"DeleteAllNotes_DeleteAllNotes__2mnxk\"};"],"sourceRoot":""}